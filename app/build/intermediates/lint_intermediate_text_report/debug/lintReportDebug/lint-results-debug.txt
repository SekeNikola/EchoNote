E:\EchoNote\app\src\main\java\com\example\app\worker\ReminderWorker.kt:41: Error: Call requires permission which may be rejected by user: code should explicitly check to see if permission is available (with checkPermission) or explicitly handle a potential SecurityException [MissingPermission]
        NotificationManagerCompat.from(applicationContext).notify(noteId.toInt(), builder.build())
        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
E:\EchoNote\app\src\main\java\com\example\app\worker\ReminderWorker.kt:41: Error: Missing permissions required by NotificationManagerCompat.notify: android.permission.POST_NOTIFICATIONS [MissingPermission]
        NotificationManagerCompat.from(applicationContext).notify(noteId.toInt(), builder.build())
        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

   Explanation for issues of type "MissingPermission":
   This check scans through your code and libraries and looks at the APIs
   being used, and checks this against the set of permissions required to
   access those APIs. If the code using those APIs is called at runtime, then
   the program will crash.

   Furthermore, for permissions that are revocable (with targetSdkVersion 23),
   client code must also be prepared to handle the calls throwing an exception
   if the user rejects the request for permission at runtime.

E:\EchoNote\app\src\main\AndroidManifest.xml:21: Warning: READ_EXTERNAL_STORAGE is deprecated (and is not granted) when targeting Android 13+. If you need to query or interact with MediaStore or media files on the shared storage, you should instead use one or more new storage permissions: READ_MEDIA_IMAGES, READ_MEDIA_VIDEO or READ_MEDIA_AUDIO. [ScopedStorage]
    <uses-permission android:name="android.permission.READ_EXTERNAL_STORAGE" />
                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

   Explanation for issues of type "ScopedStorage":
   Scoped storage is enforced on Android 10+ (or Android 11+ if using
   requestLegacyExternalStorage). In particular, WRITE_EXTERNAL_STORAGE will
   no longer provide write access to all files; it will provide the equivalent
   of READ_EXTERNAL_STORAGE instead.

   As of Android 13, if you need to query or interact with MediaStore or media
   files on the shared storage, you should be using instead one or more new
   storage permissions:
   * android.permission.READ_MEDIA_IMAGES
   * android.permission.READ_MEDIA_VIDEO
   * android.permission.READ_MEDIA_AUDIO

   and then add maxSdkVersion="33" to the older permission. See the developer
   guide for how to do this:
   https://developer.android.com/about/versions/13/behavior-changes-13#granula
   r-media-permissions

   The MANAGE_EXTERNAL_STORAGE permission can be used to manage all files, but
   it is rarely necessary and most apps on Google Play are not allowed to use
   it. Most apps should instead migrate to use scoped storage. To modify or
   delete files, apps should request write access from the user as described
   at https://goo.gle/android-mediastore-createwriterequest.

   To learn more, read these resources: Play policy:
   https://goo.gle/policy-storage-help Allowable use cases:
   https://goo.gle/policy-storage-usecases

   https://goo.gle/android-storage-usecases

E:\EchoNote\app\src\main\java\com\example\app\server\DataSyncManager.kt:30: Error: Call requires API level 26, or core library desugaring (current min is 24): java.time.Instant#ofEpochMilli [NewApi]
                        updatedAt = java.time.Instant.ofEpochMilli(dbTask.updatedAt).toString()
                                                      ~~~~~~~~~~~~
E:\EchoNote\app\src\main\java\com\example\app\server\DataSyncManager.kt:52: Error: Call requires API level 26, or core library desugaring (current min is 24): java.time.Instant#ofEpochMilli [NewApi]
                        updatedAt = java.time.Instant.ofEpochMilli(dbNote.createdAt).toString()
                                                      ~~~~~~~~~~~~
E:\EchoNote\app\src\main\java\com\example\app\server\KtorServer.kt:69: Error: Call requires API level 26, or core library desugaring (current min is 24): java.time.Instant#now [NewApi]
    private fun getCurrentTimestamp(): String = Instant.now().toString()
                                                        ~~~
E:\EchoNote\app\src\main\java\com\example\app\server\KtorServer.kt:203: Error: Call requires API level 26, or core library desugaring (current min is 24): java.time.Duration#ofSeconds [NewApi]
                pingPeriod = Duration.ofSeconds(15)
                                      ~~~~~~~~~
E:\EchoNote\app\src\main\java\com\example\app\server\KtorServer.kt:204: Error: Call requires API level 26, or core library desugaring (current min is 24): java.time.Duration#ofSeconds [NewApi]
                timeout = Duration.ofSeconds(15)
                                   ~~~~~~~~~
E:\EchoNote\app\src\main\java\com\example\app\server\NgrokManager.kt:44: Error: Call requires API level 26 (current min is 24): java.lang.Process#destroyForcibly [NewApi]
            ngrokProcess?.destroyForcibly()
                          ~~~~~~~~~~~~~~~
E:\EchoNote\app\src\main\java\com\example\app\viewmodel\NoteViewModel.kt:168: Error: Call requires API level 26, or core library desugaring (current min is 24): java.time.Instant#now [NewApi]
                    updatedAt = java.time.Instant.now().toString()
                                                  ~~~
E:\EchoNote\app\src\main\java\com\example\app\viewmodel\NoteViewModel.kt:347: Error: Call requires API level 26, or core library desugaring (current min is 24): java.time.Instant#now [NewApi]
                    updatedAt = java.time.Instant.now().toString()
                                                  ~~~
E:\EchoNote\app\src\main\java\com\example\app\viewmodel\NoteViewModel.kt:1904: Error: Call requires API level 26, or core library desugaring (current min is 24): java.time.Instant#ofEpochMilli [NewApi]
                    updatedAt = java.time.Instant.ofEpochMilli(task.updatedAt).toString()
                                                  ~~~~~~~~~~~~
E:\EchoNote\app\src\main\java\com\example\app\viewmodel\NoteViewModel.kt:2002: Error: Call requires API level 26, or core library desugaring (current min is 24): java.time.Instant#ofEpochMilli [NewApi]
                    updatedAt = java.time.Instant.ofEpochMilli(note.createdAt).toString()
                                                  ~~~~~~~~~~~~
E:\EchoNote\app\src\main\java\com\example\app\viewmodel\NoteViewModel.kt:2744: Error: Call requires API level 26, or core library desugaring (current min is 24): java.time.Instant#ofEpochMilli [NewApi]
                    updatedAt = java.time.Instant.ofEpochMilli(task.updatedAt).toString()
                                                  ~~~~~~~~~~~~
E:\EchoNote\app\src\main\java\com\example\app\viewmodel\NoteViewModel.kt:2978: Error: Call requires API level 26, or core library desugaring (current min is 24): java.time.Instant#ofEpochMilli [NewApi]
                    updatedAt = java.time.Instant.ofEpochMilli(newTask.updatedAt).toString()
                                                  ~~~~~~~~~~~~
E:\EchoNote\app\src\main\java\com\example\app\viewmodel\NoteViewModel.kt:3008: Error: Call requires API level 26, or core library desugaring (current min is 24): java.time.Instant#ofEpochMilli [NewApi]
                updatedAt = java.time.Instant.ofEpochMilli(newNote.createdAt).toString()
                                              ~~~~~~~~~~~~
E:\EchoNote\app\src\main\java\com\example\app\viewmodel\NoteViewModel.kt:3059: Error: Call requires API level 26, or core library desugaring (current min is 24): java.time.Instant#ofEpochMilli [NewApi]
                        updatedAt = java.time.Instant.ofEpochMilli(updatedTask.updatedAt).toString()
                                                      ~~~~~~~~~~~~
E:\EchoNote\app\src\main\java\com\example\app\viewmodel\NoteViewModel.kt:3129: Error: Call requires API level 26, or core library desugaring (current min is 24): java.time.Instant#ofEpochMilli [NewApi]
                        updatedAt = java.time.Instant.ofEpochMilli(updatedTask.updatedAt).toString()
                                                      ~~~~~~~~~~~~

   Explanation for issues of type "NewApi":
   This check scans through all the Android API calls in the application and
   warns about any calls that are not available on all versions targeted by
   this application (according to its minimum SDK attribute in the manifest).

   If you really want to use this API and don't need to support older devices
   just set the minSdkVersion in your build.gradle or AndroidManifest.xml
   files.

   If your code is deliberately accessing newer APIs, and you have ensured
   (e.g. with conditional execution) that this code will only ever be called
   on a supported platform, then you can annotate your class or method with
   the @TargetApi annotation specifying the local minimum SDK to apply, such
   as @TargetApi(11), such that this check considers 11 rather than your
   manifest file's minimum SDK as the required API level.

   If you are deliberately setting android: attributes in style definitions,
   make sure you place this in a values-vNN folder in order to avoid running
   into runtime conflicts on certain devices where manufacturers have added
   custom attributes whose ids conflict with the new ones on later platforms.

   Similarly, you can use tools:targetApi="11" in an XML file to indicate that
   the element will only be inflated in an adequate context.

E:\EchoNote\app\src\main\java\com\example\app\worker\ReminderWorker.kt:41: Error: When targeting Android 13 or higher, posting a permission requires holding the POST_NOTIFICATIONS permission [NotificationPermission]
        NotificationManagerCompat.from(applicationContext).notify(noteId.toInt(), builder.build())
        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

   Explanation for issues of type "NotificationPermission":
   When targeting Android 13 and higher, posting permissions requires holding
   the runtime permission android.permission.POST_NOTIFICATIONS.

E:\EchoNote\app\build.gradle.kts:26: Warning: Not targeting the latest versions of Android; compatibility modes apply. Consider testing and updating this version. Consult the android.os.Build.VERSION_CODES javadoc for details. [OldTargetApi]
        targetSdk = 34
        ~~~~~~~~~~~~~~

   Explanation for issues of type "OldTargetApi":
   When your application or sdk runs on a version of Android that is more
   recent than your targetSdkVersion specifies that it has been tested with,
   various compatibility modes kick in. This ensures that your application
   continues to work, but it may look out of place. For example, if the
   targetSdkVersion is less than 14, your app may get an option button in the
   UI.

   To fix this issue, set the targetSdkVersion to the highest available value.
   Then test your app to make sure everything works correctly. You may want to
   consult the compatibility notes to see what changes apply to each version
   you are adding support for:
   https://developer.android.com/reference/android/os/Build.VERSION_CODES.html
   as well as follow this guide:
   https://developer.android.com/distribute/best-practices/develop/target-sdk.
   html

   https://developer.android.com/distribute/best-practices/develop/target-sdk.html

E:\EchoNote\app\src\main\java\com\example\app\viewmodel\NoteViewModel.kt:618: Error: Suspicious indentation: This is indented but is not continuing the previous expression (summary.value...) [SuspiciousIndentation]
        if (speechRecognizer == null) {
        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    E:\EchoNote\app\src\main\java\com\example\app\viewmodel\NoteViewModel.kt:617: Previous statement here

   Explanation for issues of type "SuspiciousIndentation":
   This check looks for cases where the indentation suggests a grouping that
   isn't actually there in the code. A common example of this would be
   something like
   if (column > width)
       line++
       column = 0
   Here, the column = 0 line will be executed every single time, not just if
   the condition is true.

   Available options:

   **always-run** (default is false):
   Whether this check should be included while editing.

   While you're editing, it's common to have a temporary situation where you have suspicious indentation scenarios -- e.g. you start typing an `if` statement on the line above something you want to make conditional, and you haven't indented it yet. It can be distracting and misleading to suddenly have both statements light up as errors. Therefore, lint will avoid including this check when running on the fly in the editor, unless it looks like the file has not been recently edited. With this option, you can turn it on in all cases.

   To configure this option, use a `lint.xml` file with an <option> like this:

   ```xml
   <lint>
       <issue id="SuspiciousIndentation">
           <option name="always-run" value="false" />
       </issue>
   </lint>
   ```

E:\EchoNote\app\src\main\res\xml\widget_info.xml:5: Warning: Attribute targetCellWidth is only used in API level 31 and higher (current min is 24) [UnusedAttribute]
    android:targetCellWidth="4"
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~
E:\EchoNote\app\src\main\res\xml\widget_info.xml:6: Warning: Attribute targetCellHeight is only used in API level 31 and higher (current min is 24) [UnusedAttribute]
    android:targetCellHeight="5"
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~

   Explanation for issues of type "UnusedAttribute":
   This check finds attributes set in XML files that were introduced in a
   version newer than the oldest version targeted by your application (with
   the minSdkVersion attribute).

   This is not an error; the application will simply ignore the attribute.
   However, if the attribute is important to the appearance or functionality
   of your application, you should consider finding an alternative way to
   achieve the same result with only available attributes, and then you can
   optionally create a copy of the layout in a layout-vNN folder which will be
   used on API NN or higher where you can take advantage of the newer
   attribute.

   Note: This check does not only apply to attributes. For example, some tags
   can be unused too, such as the new <tag> element in layouts introduced in
   API 21.

E:\EchoNote\app\src\main\AndroidManifest.xml:28: Error: Permission is only granted to system apps [ProtectedPermissions]
    <uses-permission android:name="android.permission.MANAGE_DOCUMENTS" />
                     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

   Explanation for issues of type "ProtectedPermissions":
   Permissions with the protection level signature, privileged or
   signatureOrSystem are only granted to system apps (unless they also include
   appop). If an app is a regular non-system app, it will never be able to use
   these permissions.

E:\EchoNote\app\src\main\AndroidManifest.xml:16: Warning: Your app is currently not handling Selected Photos Access introduced in Android 14+ [SelectedPhotoAccess]
    <uses-permission android:name="android.permission.READ_MEDIA_IMAGES" />
                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
E:\EchoNote\app\src\main\AndroidManifest.xml:18: Warning: Your app is currently not handling Selected Photos Access introduced in Android 14+ [SelectedPhotoAccess]
    <uses-permission android:name="android.permission.READ_MEDIA_VIDEO" />
                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

   Explanation for issues of type "SelectedPhotoAccess":
   Selected Photo Access is a new ability for users to share partial access to
   their photo library when apps request access to their device storage on
   Android 14+.

   Instead of letting the system manage the selection lifecycle, we recommend
   you adapt your app to handle partial access to the photo library.

   https://developer.android.com/about/versions/14/changes/partial-photo-video-access

E:\EchoNote\app\build.gradle.kts:8: Warning: A newer version of com.android.application than 8.12.3 is available: 8.13.0 [AndroidGradlePluginVersion]
    id("com.android.application") version "8.12.3"
                                          ~~~~~~~~

   Explanation for issues of type "AndroidGradlePluginVersion":
   This detector looks for usage of the Android Gradle Plugin where the
   version you are using is not the current stable release. Using older
   versions is fine, and there are cases where you deliberately want to stick
   with an older version. However, you may simply not be aware that a more
   recent version is available, and that is what this lint check helps find.

E:\EchoNote\app\build.gradle.kts:22: Warning: A newer version of compileSdkVersion than 34 is available: 36 [GradleDependency]
    compileSdk = 34
    ~~~~~~~~~~~~~~~
E:\EchoNote\app\build.gradle.kts:71: Warning: A newer version of androidx.core:core-ktx than 1.12.0 is available: 1.17.0 [GradleDependency]
    implementation("androidx.core:core-ktx:1.12.0")
                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
E:\EchoNote\app\build.gradle.kts:72: Warning: A newer version of androidx.appcompat:appcompat than 1.6.1 is available: 1.7.1 [GradleDependency]
    implementation("androidx.appcompat:appcompat:1.6.1")
                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
E:\EchoNote\app\build.gradle.kts:73: Warning: A newer version of com.google.android.material:material than 1.11.0 is available: 1.13.0 [GradleDependency]
    implementation("com.google.android.material:material:1.11.0")
                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
E:\EchoNote\app\build.gradle.kts:76: Warning: A newer version of androidx.activity:activity-compose than 1.8.2 is available: 1.11.0 [GradleDependency]
    implementation("androidx.activity:activity-compose:1.8.2")
                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
E:\EchoNote\app\build.gradle.kts:77: Warning: A newer version of androidx.compose.ui:ui than 1.6.7 is available: 1.9.1 [GradleDependency]
        implementation("androidx.compose.ui:ui:1.6.7")
                       ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
E:\EchoNote\app\build.gradle.kts:78: Warning: Upgrade androidx.compose.foundation for keyboard and mouse support [GradleDependency]
        implementation("androidx.compose.foundation:foundation:1.6.7") // Added this line
                       ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
E:\EchoNote\app\build.gradle.kts:79: Warning: A newer version of androidx.compose.material3:material3 than 1.2.1 is available: 1.3.2 [GradleDependency]
        implementation("androidx.compose.material3:material3:1.2.1")
                       ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
E:\EchoNote\app\build.gradle.kts:80: Warning: A newer version of androidx.compose.ui:ui-tooling-preview than 1.6.7 is available: 1.9.1 [GradleDependency]
        implementation("androidx.compose.ui:ui-tooling-preview:1.6.7")
                       ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
E:\EchoNote\app\build.gradle.kts:81: Warning: A newer version of androidx.lifecycle:lifecycle-runtime-ktx than 2.7.0 is available: 2.9.3 [GradleDependency]
        implementation("androidx.lifecycle:lifecycle-runtime-ktx:2.7.0")
                       ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
E:\EchoNote\app\build.gradle.kts:82: Warning: A newer version of androidx.lifecycle:lifecycle-viewmodel-compose than 2.7.0 is available: 2.9.3 [GradleDependency]
        implementation("androidx.lifecycle:lifecycle-viewmodel-compose:2.7.0")
                       ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
E:\EchoNote\app\build.gradle.kts:83: Warning: A newer version of androidx.navigation:navigation-compose than 2.7.7 is available: 2.9.4 [GradleDependency]
        implementation("androidx.navigation:navigation-compose:2.7.7")
                       ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
E:\EchoNote\app\build.gradle.kts:84: Warning: A newer version of androidx.compose.material:material-icons-extended than 1.6.7 is available: 1.7.8 [GradleDependency]
    implementation("androidx.compose.material:material-icons-extended:1.6.7")
                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
E:\EchoNote\app\build.gradle.kts:85: Warning: A newer version of androidx.compose.material:material than 1.6.7 is available: 1.9.1 [GradleDependency]
    implementation("androidx.compose.material:material:1.6.7")
                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
E:\EchoNote\app\build.gradle.kts:86: Warning: A newer version of androidx.compose.runtime:runtime-livedata than 1.6.7 is available: 1.9.1 [GradleDependency]
        implementation("androidx.compose.runtime:runtime-livedata:1.6.7")
                       ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
E:\EchoNote\app\build.gradle.kts:87: Warning: A newer version of androidx.compose.ui:ui-tooling than 1.6.7 is available: 1.9.1 [GradleDependency]
        debugImplementation("androidx.compose.ui:ui-tooling:1.6.7")
                            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
E:\EchoNote\app\build.gradle.kts:88: Warning: A newer version of androidx.compose.ui:ui-test-manifest than 1.6.7 is available: 1.9.1 [GradleDependency]
        debugImplementation("androidx.compose.ui:ui-test-manifest:1.6.7")
                            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
E:\EchoNote\app\build.gradle.kts:89: Warning: A newer version of androidx.compose.ui:ui-test-junit4 than 1.6.7 is available: 1.9.1 [GradleDependency]
        androidTestImplementation("androidx.compose.ui:ui-test-junit4:1.6.7")
                                  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
E:\EchoNote\app\build.gradle.kts:92: Warning: A newer version of androidx.room:room-runtime than 2.6.1 is available: 2.8.0 [GradleDependency]
    implementation("androidx.room:room-runtime:2.6.1")
                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
E:\EchoNote\app\build.gradle.kts:93: Warning: A newer version of androidx.room:room-compiler than 2.6.1 is available: 2.8.0 [GradleDependency]
    kapt("androidx.room:room-compiler:2.6.1")
         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
E:\EchoNote\app\build.gradle.kts:94: Warning: A newer version of androidx.room:room-ktx than 2.6.1 is available: 2.8.0 [GradleDependency]
    implementation("androidx.room:room-ktx:2.6.1")
                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
E:\EchoNote\app\build.gradle.kts:97: Warning: A newer version of androidx.work:work-runtime-ktx than 2.9.0 is available: 2.10.4 [GradleDependency]
    implementation("androidx.work:work-runtime-ktx:2.9.0")
                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
E:\EchoNote\app\build.gradle.kts:115: Warning: A newer version of androidx.lifecycle:lifecycle-livedata-ktx than 2.7.0 is available: 2.9.3 [GradleDependency]
    implementation("androidx.lifecycle:lifecycle-livedata-ktx:2.7.0")
                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
E:\EchoNote\app\build.gradle.kts:116: Warning: A newer version of androidx.lifecycle:lifecycle-viewmodel-ktx than 2.7.0 is available: 2.9.3 [GradleDependency]
    implementation("androidx.lifecycle:lifecycle-viewmodel-ktx:2.7.0")
                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
E:\EchoNote\app\build.gradle.kts:119: Warning: A newer version of androidx.documentfile:documentfile than 1.0.1 is available: 1.1.0 [GradleDependency]
    implementation("androidx.documentfile:documentfile:1.0.1")
                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
E:\EchoNote\app\build.gradle.kts:122: Warning: A newer version of com.google.mlkit:text-recognition than 16.0.0 is available: 16.0.1 [GradleDependency]
    implementation("com.google.mlkit:text-recognition:16.0.0")
                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
E:\EchoNote\app\build.gradle.kts:125: Warning: A newer version of androidx.exifinterface:exifinterface than 1.3.7 is available: 1.4.1 [GradleDependency]
    implementation("androidx.exifinterface:exifinterface:1.3.7")
                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
E:\EchoNote\app\build.gradle.kts:149: Warning: A newer version of androidx.test.ext:junit than 1.1.5 is available: 1.3.0 [GradleDependency]
    androidTestImplementation("androidx.test.ext:junit:1.1.5")
                              ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
E:\EchoNote\app\build.gradle.kts:150: Warning: A newer version of androidx.test.espresso:espresso-core than 3.5.1 is available: 3.7.0 [GradleDependency]
    androidTestImplementation("androidx.test.espresso:espresso-core:3.5.1")
                              ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
E:\EchoNote\app\build.gradle.kts:151: Warning: A newer version of androidx.compose.ui:ui-test-junit4 than 1.6.4 is available: 1.9.1 [GradleDependency]
    androidTestImplementation("androidx.compose.ui:ui-test-junit4:1.6.4")
                              ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

   Explanation for issues of type "GradleDependency":
   This detector looks for usages of libraries where the version you are using
   is not the current stable release. Using older versions is fine, and there
   are cases where you deliberately want to stick with an older version.
   However, you may simply not be aware that a more recent version is
   available, and that is what this lint check helps find.

E:\EchoNote\app\build.gradle.kts:10: Warning: A newer version of org.jetbrains.kotlin.kapt than 1.9.23 is available: 2.2.20 [NewerVersionAvailable]
        id("org.jetbrains.kotlin.kapt") version "1.9.23"
                                                ~~~~~~~~
E:\EchoNote\app\build.gradle.kts:100: Warning: A newer version of com.squareup.retrofit2:retrofit than 2.9.0 is available: 3.0.0 [NewerVersionAvailable]
    implementation("com.squareup.retrofit2:retrofit:2.9.0")
                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
E:\EchoNote\app\build.gradle.kts:101: Warning: A newer version of com.squareup.retrofit2:converter-gson than 2.9.0 is available: 3.0.0 [NewerVersionAvailable]
    implementation("com.squareup.retrofit2:converter-gson:2.9.0")
                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
E:\EchoNote\app\build.gradle.kts:102: Warning: A newer version of com.squareup.okhttp3:okhttp than 4.12.0 is available: 5.1.0 [NewerVersionAvailable]
    implementation("com.squareup.okhttp3:okhttp:4.12.0")
                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
E:\EchoNote\app\build.gradle.kts:103: Warning: A newer version of com.squareup.okhttp3:logging-interceptor than 4.12.0 is available: 5.1.0 [NewerVersionAvailable]
    implementation("com.squareup.okhttp3:logging-interceptor:4.12.0")
                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
E:\EchoNote\app\build.gradle.kts:106: Warning: A newer version of org.jetbrains.kotlinx:kotlinx-coroutines-android than 1.7.3 is available: 1.10.2 [NewerVersionAvailable]
    implementation("org.jetbrains.kotlinx:kotlinx-coroutines-android:1.7.3")
                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
E:\EchoNote\app\build.gradle.kts:109: Warning: A newer version of com.google.code.gson:gson than 2.10.1 is available: 2.13.2 [NewerVersionAvailable]
    implementation("com.google.code.gson:gson:2.10.1")
                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
E:\EchoNote\app\build.gradle.kts:112: Warning: A newer version of com.google.accompanist:accompanist-permissions than 0.34.0 is available: 0.37.3 [NewerVersionAvailable]
    implementation("com.google.accompanist:accompanist-permissions:0.34.0")
                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
E:\EchoNote\app\build.gradle.kts:128: Warning: A newer version of io.coil-kt:coil-compose than 2.4.0 is available: 2.7.0 [NewerVersionAvailable]
    implementation("io.coil-kt:coil-compose:2.4.0")
                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
E:\EchoNote\app\build.gradle.kts:131: Warning: A newer version of com.airbnb.android:lottie-compose than 6.1.0 is available: 6.6.7 [NewerVersionAvailable]
    implementation("com.airbnb.android:lottie-compose:6.1.0")
                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
E:\EchoNote\app\build.gradle.kts:134: Warning: A newer version of org.jsoup:jsoup than 1.17.2 is available: 1.21.2 [NewerVersionAvailable]
    implementation("org.jsoup:jsoup:1.17.2")
                   ~~~~~~~~~~~~~~~~~~~~~~~~
E:\EchoNote\app\build.gradle.kts:137: Warning: A newer version of io.ktor:ktor-server-core than 2.3.7 is available: 3.3.0 [NewerVersionAvailable]
    implementation("io.ktor:ktor-server-core:2.3.7")
                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
E:\EchoNote\app\build.gradle.kts:138: Warning: A newer version of io.ktor:ktor-server-netty than 2.3.7 is available: 3.3.0 [NewerVersionAvailable]
    implementation("io.ktor:ktor-server-netty:2.3.7")
                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
E:\EchoNote\app\build.gradle.kts:139: Warning: A newer version of io.ktor:ktor-server-content-negotiation than 2.3.7 is available: 3.3.0 [NewerVersionAvailable]
    implementation("io.ktor:ktor-server-content-negotiation:2.3.7")
                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
E:\EchoNote\app\build.gradle.kts:140: Warning: A newer version of io.ktor:ktor-serialization-kotlinx-json than 2.3.7 is available: 3.3.0 [NewerVersionAvailable]
    implementation("io.ktor:ktor-serialization-kotlinx-json:2.3.7")
                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
E:\EchoNote\app\build.gradle.kts:141: Warning: A newer version of io.ktor:ktor-server-websockets than 2.3.7 is available: 3.3.0 [NewerVersionAvailable]
    implementation("io.ktor:ktor-server-websockets:2.3.7")
                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
E:\EchoNote\app\build.gradle.kts:142: Warning: A newer version of io.ktor:ktor-server-cors than 2.3.7 is available: 3.3.0 [NewerVersionAvailable]
    implementation("io.ktor:ktor-server-cors:2.3.7")
                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
E:\EchoNote\app\build.gradle.kts:143: Warning: A newer version of org.jetbrains.kotlinx:kotlinx-serialization-json than 1.6.2 is available: 1.9.0 [NewerVersionAvailable]
    implementation("org.jetbrains.kotlinx:kotlinx-serialization-json:1.6.2")
                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

   Explanation for issues of type "NewerVersionAvailable":
   This detector checks with a central repository to see if there are newer
   versions available for the dependencies used by this project. This is
   similar to the GradleDependency check, which checks for newer versions
   available in the Android SDK tools and libraries, but this works with any
   MavenCentral dependency, and connects to the library every time, which
   makes it more flexible but also much slower.

E:\EchoNote\app\src\main\java\com\example\app\ui\components\MinimalTextField.kt:16: Warning: Modifier parameter should be the first optional parameter [ModifierParameter from androidx.compose.ui]
    modifier: Modifier = Modifier
    ~~~~~~~~

   Explanation for issues of type "ModifierParameter":
   The first (or only) Modifier parameter in a Composable function should
   follow the following rules:
   - Be named modifier
   - Have a type of Modifier
   - Either have no default value, or have a default value of Modifier
   - If optional, be the first optional parameter in the parameter list

   Vendor: Jetpack Compose
   Identifier: androidx.compose.ui
   Feedback: https://issuetracker.google.com/issues/new?component=612128

C:\Users\T\.gradle\caches\8.13\transforms\bb4d61a6df5a9992699696028d7420b9\transformed\jetified-text-recognition-bundled-common-16.0.0\jni\arm64-v8a\libmlkit_google_ocr_pipeline.so: Warning: The native library arm64-v8a/libmlkit_google_ocr_pipeline.so (from com.google.mlkit:text-recognition-bundled-common:16.0.0) is not 16 KB aligned [Aligned16KB]
C:\Users\T\.gradle\caches\8.13\transforms\bb4d61a6df5a9992699696028d7420b9\transformed\jetified-text-recognition-bundled-common-16.0.0\jni\arm64-v8a\libmlkit_google_ocr_pipeline.so: Warning: The native library arm64-v8a/libmlkit_google_ocr_pipeline.so (from com.google.mlkit:text-recognition-bundled-common:16.0.0) is not 16 KB aligned [Aligned16KB]
C:\Users\T\.gradle\caches\8.13\transforms\bb4d61a6df5a9992699696028d7420b9\transformed\jetified-text-recognition-bundled-common-16.0.0\jni\arm64-v8a\libmlkit_google_ocr_pipeline.so: Warning: The native library arm64-v8a/libmlkit_google_ocr_pipeline.so (from com.google.mlkit:text-recognition-bundled-common:16.0.0) is not 16 KB aligned [Aligned16KB]

   Explanation for issues of type "Aligned16KB":
   Android has traditionally used 4 KB memory page sizes. However, to support
   future devices that only work with 16 KB aligned libraries apps containing
   native libraries need to be built with 16 KB alignment.

   Apps with 4 KB aligned native libraries may not work correctly on devices
   requiring 16 KB alignment. To ensure compatibility and future-proof your
   app, it is strongly recommended that your native libraries are aligned to
   16 KB boundaries.

   If your app uses any NDK libraries, directly or indirectly through an SDK,
   you should rebuild your app to meet this recommendation. Make sure all
   native libraries within your application, including those from
   dependencies, are built with 16 KB page alignment.

   This lint check looks at all native libraries that your app depends on. If
   any are found to be aligned to 4 KB instead of 16 KB, you will need to
   address this.

   When a library is flagged, first try to update to a newer version that
   supports 16 KB alignment. If an updated version is not available, contact
   the library vendor to ask about their plans for 16 KB support and request a
   compatible version. Updating your libraries proactively will help ensure
   your app works properly on a wider range of devices.

   https://developer.android.com/guide/practices/page-sizes

E:\EchoNote\app\build.gradle.kts:93: Warning: This library supports using KSP instead of kapt, which greatly improves performance. Learn more: https://developer.android.com/studio/build/migrate-to-ksp [KaptUsageInsteadOfKsp]
    kapt("androidx.room:room-compiler:2.6.1")
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

   Explanation for issues of type "KaptUsageInsteadOfKsp":
   KSP is a more efficient replacement for kapt. For libraries that support
   both, KSP should be used to improve build times.

   https://developer.android.com/studio/build/migrate-to-ksp

E:\EchoNote\app\src\main\java\com\example\app\ui\RecordingScreen.kt:69: Hint: Prefer mutableIntStateOf instead of mutableStateOf [AutoboxingStateCreation from androidx.compose.runtime]
                val dotCount = remember { mutableStateOf(1) }
                                          ~~~~~~~~~~~~~~
E:\EchoNote\app\src\main\java\com\example\app\ui\SimpleHomeScreen.kt:75: Hint: Prefer mutableIntStateOf instead of mutableStateOf [AutoboxingStateCreation from androidx.compose.runtime]
    var noteSheetCounter by remember { mutableStateOf(0) }
                                       ~~~~~~~~~~~~~~
E:\EchoNote\app\src\main\java\com\example\app\ui\SimpleHomeScreen.kt:940: Hint: Prefer mutableLongStateOf instead of mutableStateOf [AutoboxingStateCreation from androidx.compose.runtime]
    var selectedDate by remember { mutableStateOf<Long>(todayStart) }
                                   ~~~~~~~~~~~~~~
E:\EchoNote\app\src\main\java\com\example\app\ui\TaskDetailScreen.kt:43: Hint: Prefer mutableLongStateOf instead of mutableStateOf [AutoboxingStateCreation from androidx.compose.runtime]
    var editDueDate by remember { mutableStateOf(0L) }
                                  ~~~~~~~~~~~~~~

   Explanation for issues of type "AutoboxingStateCreation":
   Calling mutableStateOf<T>() when T is either backed by a primitive type on
   the JVM or is a value class results in a state implementation that requires
   all state values to be boxed. This usually causes an additional allocation
   for each state write, and adds some additional work to auto-unbox values
   when reading the value of the state. Instead, prefer to use a specialized
   primitive state implementation for Int, Long, Float, and Double when the
   state does not need to track null values and does not override the default
   SnapshotMutationPolicy. See mutableIntStateOf(), mutableLongStateOf(),
   mutableFloatStateOf(), and mutableDoubleStateOf() for more information.

   Vendor: Jetpack Compose
   Identifier: androidx.compose.runtime
   Feedback: https://issuetracker.google.com/issues/new?component=612128

E:\EchoNote\app\src\main\res\layout\activity_main.xml:2: Warning: The resource R.layout.activity_main appears to be unused [UnusedResources]
<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
^
E:\EchoNote\app\src\main\res\drawable\ic_description.xml:1: Warning: The resource R.drawable.ic_description appears to be unused [UnusedResources]
<vector xmlns:android="http://schemas.android.com/apk/res/android"
^
E:\EchoNote\app\src\main\res\drawable\ic_edit.xml:1: Warning: The resource R.drawable.ic_edit appears to be unused [UnusedResources]
<vector xmlns:android="http://schemas.android.com/apk/res/android"
^
E:\EchoNote\app\src\main\res\drawable\ic_fiber_manual_record.xml:1: Warning: The resource R.drawable.ic_fiber_manual_record appears to be unused [UnusedResources]
<vector xmlns:android="http://schemas.android.com/apk/res/android"
^
E:\EchoNote\app\src\main\res\drawable\ic_image.xml:1: Warning: The resource R.drawable.ic_image appears to be unused [UnusedResources]
<vector xmlns:android="http://schemas.android.com/apk/res/android"
^
E:\EchoNote\app\src\main\res\drawable\ic_language.xml:1: Warning: The resource R.drawable.ic_language appears to be unused [UnusedResources]
<vector xmlns:android="http://schemas.android.com/apk/res/android"
^
E:\EchoNote\app\src\main\res\drawable\ic_mic.xml:1: Warning: The resource R.drawable.ic_mic appears to be unused [UnusedResources]
<vector xmlns:android="http://schemas.android.com/apk/res/android"
^
E:\EchoNote\app\src\main\res\drawable\ic_photo_camera.xml:1: Warning: The resource R.drawable.ic_photo_camera appears to be unused [UnusedResources]
<vector xmlns:android="http://schemas.android.com/apk/res/android"
^
E:\EchoNote\app\src\main\res\drawable\ic_sparkle.xml:2: Warning: The resource R.drawable.ic_sparkle appears to be unused [UnusedResources]
<vector xmlns:android="http://schemas.android.com/apk/res/android"
^
E:\EchoNote\app\src\main\res\drawable\ic_sparkle_single.xml:2: Warning: The resource R.drawable.ic_sparkle_single appears to be unused [UnusedResources]
<vector xmlns:android="http://schemas.android.com/apk/res/android"
^
E:\EchoNote\app\src\main\res\drawable\ic_videocam.xml:1: Warning: The resource R.drawable.ic_videocam appears to be unused [UnusedResources]
<vector xmlns:android="http://schemas.android.com/apk/res/android"
^

   Explanation for issues of type "UnusedResources":
   Unused resources make applications larger and slow down builds.


   The unused resource check can ignore tests. If you want to include
   resources that are only referenced from tests, consider packaging them in a
   test source set instead.

   You can include test sources in the unused resource check by setting the
   system property lint.unused-resources.include-tests =true, and to exclude
   them (usually for performance reasons), use
   lint.unused-resources.exclude-tests =true.
   ,

   Available options:

   **skip-libraries** (default is true):
   Whether the unused resource check should skip reporting unused resources in libraries.

   Many libraries will declare resources that are part of the library surface; other modules depending on the library will also reference the resources. To avoid reporting all these resources as unused (in the context of a library), the unused resource check normally skips reporting unused resources in libraries. Instead, run the unused resource check on the consuming app module (along with `checkDependencies=true`).

   However, there are cases where you want to check that all the resources declared in a library are used; in that case, you can disable the skip option.

   To configure this option, use a `lint.xml` file with an <option> like this:

   ```xml
   <lint>
       <issue id="UnusedResources">
           <option name="skip-libraries" value="true" />
       </issue>
   </lint>
   ```

E:\EchoNote\app\src\main\res\layout\widget_logion.xml:27: Warning: Buttons in button bars should be borderless; use style="?android:attr/buttonBarButtonStyle" (and ?android:attr/buttonBarStyle on the parent) [ButtonStyle]
        <Button
         ~~~~~~
E:\EchoNote\app\src\main\res\layout\widget_logion.xml:38: Warning: Buttons in button bars should be borderless; use style="?android:attr/buttonBarButtonStyle" (and ?android:attr/buttonBarStyle on the parent) [ButtonStyle]
        <Button
         ~~~~~~
E:\EchoNote\app\src\main\res\layout\widget_logion.xml:58: Warning: Buttons in button bars should be borderless; use style="?android:attr/buttonBarButtonStyle" (and ?android:attr/buttonBarStyle on the parent) [ButtonStyle]
        <Button
         ~~~~~~
E:\EchoNote\app\src\main\res\layout\widget_logion.xml:69: Warning: Buttons in button bars should be borderless; use style="?android:attr/buttonBarButtonStyle" (and ?android:attr/buttonBarStyle on the parent) [ButtonStyle]
        <Button
         ~~~~~~
E:\EchoNote\app\src\main\res\layout\widget_logion.xml:89: Warning: Buttons in button bars should be borderless; use style="?android:attr/buttonBarButtonStyle" (and ?android:attr/buttonBarStyle on the parent) [ButtonStyle]
        <Button
         ~~~~~~
E:\EchoNote\app\src\main\res\layout\widget_logion.xml:100: Warning: Buttons in button bars should be borderless; use style="?android:attr/buttonBarButtonStyle" (and ?android:attr/buttonBarStyle on the parent) [ButtonStyle]
        <Button
         ~~~~~~
E:\EchoNote\app\src\main\res\layout\widget_logion.xml:119: Warning: Buttons in button bars should be borderless; use style="?android:attr/buttonBarButtonStyle" (and ?android:attr/buttonBarStyle on the parent) [ButtonStyle]
        <Button
         ~~~~~~
E:\EchoNote\app\src\main\res\layout\widget_logion.xml:130: Warning: Buttons in button bars should be borderless; use style="?android:attr/buttonBarButtonStyle" (and ?android:attr/buttonBarStyle on the parent) [ButtonStyle]
        <Button
         ~~~~~~

   Explanation for issues of type "ButtonStyle":
   Button bars typically use a borderless style for the buttons. Set the
   style="?android:attr/buttonBarButtonStyle" attribute on each of the
   buttons, and set style="?android:attr/buttonBarStyle" on the parent layout

   https://d.android.com/r/studio-ui/designer/material/dialogs

E:\EchoNote\app\src\main\java\com\example\app\ui\AiChatScreen.kt:550: Warning: Use the KTX extension function String.toUri instead? [UseKtx]
                                        viewModel.sendChatMessageWithImage(messageToSend, Uri.parse(selectedImageUri!!), context)
                                                                                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
E:\EchoNote\app\src\main\java\com\example\app\util\ApiKeyProvider.kt:12: Warning: Use the KTX extension function SharedPreferences.edit instead? [UseKtx]
        prefs.edit().putString(KEY_OPENAI, key).apply()
        ~~~~~~~~~~~~
E:\EchoNote\app\src\main\java\com\example\app\util\ApiKeyValidator.kt:26: Warning: Use the KTX extension function SharedPreferences.edit instead? [UseKtx]
                        context.getSharedPreferences("logion_prefs", Context.MODE_PRIVATE)
                        ^
E:\EchoNote\app\src\main\java\com\example\app\util\ApiKeyValidator.kt:42: Warning: Use the KTX extension function SharedPreferences.edit instead? [UseKtx]
                        context.getSharedPreferences("logion_prefs", Context.MODE_PRIVATE)
                        ^
E:\EchoNote\app\src\main\java\com\example\app\viewmodel\NoteViewModel.kt:1315: Warning: Use the KTX extension function Bitmap.scale instead? [UseKtx]
            android.graphics.Bitmap.createScaledBitmap(bitmap, newWidth, newHeight, true)
            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
E:\EchoNote\app\src\main\java\com\example\app\ui\SettingsScreen.kt:440: Warning: Use the KTX extension function SharedPreferences.edit instead? [UseKtx]
    sharedPrefs.edit().putString("preferred_voice", voice).apply()
    ~~~~~~~~~~~~~~~~~~
E:\EchoNote\app\src\main\java\com\example\app\ui\SettingsScreen.kt:445: Warning: Use the KTX extension function SharedPreferences.edit instead? [UseKtx]
    sharedPrefs.edit().putString("openai_api_key", apiKey).apply()
    ~~~~~~~~~~~~~~~~~~
E:\EchoNote\app\src\main\java\com\example\app\ui\SimpleHomeScreen.kt:219: Warning: Use the KTX extension function String.toUri instead? [UseKtx]
                                    painter = rememberAsyncImagePainter(Uri.parse(uriString)),
                                                                        ~~~~~~~~~~~~~~~~~~~~

   Explanation for issues of type "UseKtx":
   The Android KTX libraries decorates the Android platform SDK as well as
   various libraries with more convenient extension functions available from
   Kotlin, allowing you to use default parameters, named parameters, and
   more.

   Available options:

   **remove-defaults** (default is true):
   Whether to skip arguments that match the defaults provided by the extension.

   Extensions often provide default values for some of the parameters. For example:
   ```kotlin
   fun Path.readLines(charset: Charset = Charsets.UTF_8): List<String> { return Files.readAllLines(this, charset) }
   ```
   This lint check will by default automatically omit parameters that match the default, so if your code was calling

   ```kotlin
   Files.readAllLines(file, Charset.UTF_8)
   ```
   lint would replace this with
   ```kotlin
   file.readLines()
   ```
   rather than

   ```kotlin
   file.readLines(Charset.UTF_8
   ```
   You can turn this behavior off using this option.

   To configure this option, use a `lint.xml` file with an <option> like this:

   ```xml
   <lint>
       <issue id="UseKtx">
           <option name="remove-defaults" value="true" />
       </issue>
   </lint>
   ```

   **require-present** (default is true):
   Whether to only offer extensions already available.

   This option lets you only have lint suggest extension replacements if those extensions are already available on the class path (in other words, you're already depending on the library containing the extension method.)

   To configure this option, use a `lint.xml` file with an <option> like this:

   ```xml
   <lint>
       <issue id="UseKtx">
           <option name="require-present" value="true" />
       </issue>
   </lint>
   ```

E:\EchoNote\app\src\main\res\layout\activity_main.xml:10: Warning: Hardcoded string "Hello, Boilerplate!", should use @string resource [HardcodedText]
        android:text="Hello, Boilerplate!" />
        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
E:\EchoNote\app\src\main\res\layout\widget_logion.xml:16: Warning: Hardcoded string "✨ AI Assistant", should use @string resource [HardcodedText]
        android:text="✨ AI Assistant"
        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
E:\EchoNote\app\src\main\res\layout\widget_logion.xml:34: Warning: Hardcoded string "🎙️ Record", should use @string resource [HardcodedText]
            android:text="🎙️ Record"
            ~~~~~~~~~~~~~~~~~~~~~~~~~
E:\EchoNote\app\src\main\res\layout\widget_logion.xml:45: Warning: Hardcoded string "🎵 Upload Audio", should use @string resource [HardcodedText]
            android:text="🎵 Upload Audio"
            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
E:\EchoNote\app\src\main\res\layout\widget_logion.xml:65: Warning: Hardcoded string "📷 Camera", should use @string resource [HardcodedText]
            android:text="📷 Camera"
            ~~~~~~~~~~~~~~~~~~~~~~~~
E:\EchoNote\app\src\main\res\layout\widget_logion.xml:76: Warning: Hardcoded string "🖼️ Upload Image", should use @string resource [HardcodedText]
            android:text="🖼️ Upload Image"
            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
E:\EchoNote\app\src\main\res\layout\widget_logion.xml:96: Warning: Hardcoded string "✏️ Type Text", should use @string resource [HardcodedText]
            android:text="✏️ Type Text"
            ~~~~~~~~~~~~~~~~~~~~~~~~~~~
E:\EchoNote\app\src\main\res\layout\widget_logion.xml:107: Warning: Hardcoded string "🎬 Videos", should use @string resource [HardcodedText]
            android:text="🎬 Videos"
            ~~~~~~~~~~~~~~~~~~~~~~~~
E:\EchoNote\app\src\main\res\layout\widget_logion.xml:126: Warning: Hardcoded string "🌐 Web Page", should use @string resource [HardcodedText]
            android:text="🌐 Web Page"
            ~~~~~~~~~~~~~~~~~~~~~~~~~~
E:\EchoNote\app\src\main\res\layout\widget_logion.xml:137: Warning: Hardcoded string "📁 Upload Files", should use @string resource [HardcodedText]
            android:text="📁 Upload Files"
            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

   Explanation for issues of type "HardcodedText":
   Hardcoding text attributes directly in layout files is bad for several
   reasons:

   * When creating configuration variations (for example for landscape or
   portrait) you have to repeat the actual text (and keep it up to date when
   making changes)

   * The application cannot be translated to other languages by just adding
   new translations for existing string resources.

   There are quickfixes to automatically extract this hardcoded string into a
   resource lookup.

20 errors, 97 warnings, 4 hints
